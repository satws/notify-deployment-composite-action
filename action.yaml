name: 'GitHub Notify Deployment Action'

description: 'GitHub Notify Deployment Action'

inputs:
  environment:
    description: 'Environment to deploy'
    required: true
    default: 'sandbox'
  revision:
    description: 'Revision to deploy'
    required: true
  deploy-state:
    description: 'State of deployment'
    required: true
    default: 'successful'
  jira:
    description: 'Notify Jira'
    required: false
    default: 'false'
  jira-ticket:
    description: 'Any string to catch the tickets from'
    required: false
  new-relic:
    description: 'Notify New Relic'
    required: false
    default: 'false'
  new-relic-application-id:
    description: 'New Relic Application ID to ad the marker'
    required: false
    default: 'false'
  slack:
    description: 'Notify Slack'
    required: false
    default: 'false'
  sentry:
    description: 'Notify Sentry'
    required: false
    default: 'false'
  sentry-override-environment:
    description: 'Overrides environment sent to Sentry on release'
    required: false

runs:
  using: "composite"

  steps:
    - name: Parse Jira Keys from All Commits
      if: inputs.jira == 'true'
      id: jira_keys
      uses: HighwayThree/jira-extract-issue-keys@master
      with:
        is-pull-request: ${{ github.event_name == 'pull_request' }}
        parse-all-commits: ${{ github.event_name == 'push' }}
        commit-message: ${{ inputs.jira-ticket }}

    - name: Push Deployment Info to Jira
      if: always() && inputs.jira == 'true' && steps.jira_keys.outputs.jira-keys != ''
      uses: HighwayThree/jira-upload-deployment-info@master
      with:
        client-id: ${{ env.JIRA_CLIENT_ID }}
        client-secret: ${{ env.JIRA_SECRET }}
        cloud-instance-base-url: ${{ env.JIRA_URL }}
        deployment-sequence-number: '${{ github.run_id }}'
        description: "Deployment version ${{ inputs.revision }}"
        display-name: "Deployment version ${{ inputs.revision }}"
        environment-display-name: "${{ inputs.environment }}"
        environment-id: "${{ inputs.environment }}"
        environment-type: "${{ (inputs.environment == 'sandbox' && 'staging') || (inputs.environment || 'staging') }}"
        issue-keys: "${{ steps.jira_keys.outputs.jira-keys }}"
        label: 'Deployment version ${{ inputs.revision }}'
        last-updated: '${{ github.event.head_commit.timestamp }}'
        pipeline-display-name: 'Workflow: ${{ github.repository }} ${{ github.workflow }} (#${{ github.run_number }})'
        pipeline-id: '${{ github.repository }} ${{ github.workflow }}'
        pipeline-url: 'https://github.com/${{ github.repository }}//actions/runs/${{ github.run_id }}'
        state: "${{ inputs.deploy-state }}"
        update-sequence-number: '${{ github.run_id }}'
        url: "https://github.com/${{ github.repository }}//actions/runs/${{ github.run_id }}"

    - name: Checkout for Sentry Commits
      if: always() && inputs.sentry == 'true'
      uses: actions/checkout@v2
      with:
        fetch-depth: 10

    - name: Push Release Info to Sentry
      if: always() && inputs.sentry == 'true'
      uses: getsentry/action-release@v1
      with:
        ignore_empty: true
        ignore_missing: true
        finalize: ${{ (inputs.deploy-state == 'successful' ) && true || false }}
        environment: ${{ (inputs.sentry-override-environment && inputs.sentry-override-environment) || inputs.environment }}
        version: ${{ inputs.revision }}

    - name: Create New Relic deployment marker
      if: always() && inputs.new-relic == 'true' && inputs.deploy-state == 'successful'
      uses: newrelic/deployment-marker-action@v1
      with:
        apiKey: ${{ env.NEW_RELIC_API_KEY }}
        accountId: ${{ env.NEW_RELIC_ACCOUNT_ID }}
        applicationId: ${{ inputs.new-relic-application-id }}
        revision: ${{ inputs.revision }}

    - name: Post to a Slack channel
      if: always() && inputs.slack == 'true'
      uses: slackapi/slack-github-action@v1.16.0
      with:
        channel-id: 'deployments'
        payload: |
          {
            "as_user": false,
            "username": "GitHub Action",
            "attachments": [
              {
                "mrkdwn_in": [
                    "pretext",
                    "text",
                    "value"
                ],
                "pretext": "Deployment to <https://github.com/${{ github.repository }}|${{ github.repository }}>",
                "color": "${{ (inputs.deploy-state == 'successful' && '#36a64f') || '#bd2b2b' }}",
                "fields": [
                  {
                    "title": "Author",
                    "value": "<https://github.com/${{ github.actor }}|${{ github.actor }}>",
                    "short": false
                  },
                  {
                    "title": "Version",
                    "value": "<https://github.com/${{ github.repository }}/commit/${{ inputs.revision }}|${{ inputs.revision }}>",
                    "short": true
                  },
                  {
                    "title": "Environment",
                    "value": "<https://github.com/${{ github.repository }}/deployments/activity_log?environment=${{ inputs.environment }}|${{ inputs.environment }}>",
                    "short": true
                  },
                  {
                    "title": "Workflow",
                    "value": "<https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}|${{ github.workflow }} #${{ github.run_number }}>",
                    "short": true
                  }
                ]
              }
            ]
          }
      env:
        SLACK_BOT_TOKEN: ${{ env.SLACK_BOT_TOKEN }}
